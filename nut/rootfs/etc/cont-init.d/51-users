#!/usr/bin/with-contenv bash
# ==============================================================================
# Community Hass.io Add-ons: FTP
# Configures Network UPS Tools
# ==============================================================================
# shellcheck disable=SC1091
source /usr/lib/hassio-addons/base.sh

readonly USERS_CONF=/etc/nut/upsd.users

gen_upsd_users() {
    local username
    local password

    # Overwrite the upsd.users file
    {
        echo "# This file was automatically generated by Hass.io Network"
        echo "# UPS Tools add-on. Changes to this file will be overwritten."
    } > "${USERS_CONF}"

    for user in $(hass.config.get "users|keys[]"); do
        # Require username / password
        if ! hass.config.has_value "users[${user}].username" \
            && ! ( \
                hass.config.exists "leave_front_door_open" \
                && hass.config.true "leave_front_door_open" \
            );
        then
            hass.die "You need to set a username!"
        fi

        if ! hass.config.has_value "users[${user}].password" \
            && ! ( \
                hass.config.exists "leave_front_door_open" \
                && hass.config.true "leave_front_door_open" \
            );
        then
            hass.die "You need to set a password for ${username}!";
        fi

        username=$(hass.config.get "users[${user}].username")

        # Require a secure password
        if hass.config.has_value "users[${user}].password" \
            && ! hass.config.is_safe_password "users[${user}].password"; then
            hass.die \
              "Please choose a different pass for ${username}, this one is unsafe!"
        fi

        password=$(hass.config.get "users[${user}].password")

        {
            echo
            echo "[${username}]"
            echo "  password = ${password}"
        } >> "${USERS_CONF}"

        for instcmd in $(hass.config.get "users[${user}].instcmds"); do
            echo "  instcmds = ${instcmd}" >> "${USERS_CONF}"
        done

        for action in $(hass.config.get "users[${user}].actions"); do
            echo "  actions = ${action}" >> "${USERS_CONF}"
        done

        if hass.config.has_value "users[${user}].upsmon"; then
            upsmon=$(hass.config.get "users[${user}].upsmon")
            echo "  upsmon ${upsmon}" >> "${USERS_CONF}"
        fi
    done
}

# ==============================================================================
# RUN LOGIC
# ------------------------------------------------------------------------------
main() {
    hass.log.info "Generating ${USERS_CONF}..."
    gen_upsd_users
}
main "$@"
